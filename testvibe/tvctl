#!/usr/bin/python

import argparse
import os
import sys

import testvibe


# TODO(niklas9):
# * add some system tests for this

class CMDHandler(object):

    DEFAULT_INSTALL_DIR = 'default_install/'
    FILENAME_SETTINGS = 'settings.py'
    PLACEHOLDER_NAME = '<Example>'

    args = None

    def __init__(self, args):
        self.args = args

    def execute(self):
        if self.args.cmd == 'startproject':
            if os.path.exists(self.args.name):
                print('command error: \'%s\' already exists'
                      % os.path.abspath(self.args.name))
                sys.exit(1)
            os.makedirs(self.args.name)
            self.copy_settings_file(self.args.name)
        elif self.args.cmd == 'run':
            # TODO(niklas9):
            # * initiate test run
            raise NotImplementedError()

    def copy_settings_file(self, name):
        src = ('%s/%s%s' % (os.path.dirname(testvibe.__file__),
                            self.DEFAULT_INSTALL_DIR,
                            self.FILENAME_SETTINGS))
        dst = '%s/%s' % (name, self.FILENAME_SETTINGS)
        with open(src, 'r') as f_src:
            src_content = f_src.read()
        with open(dst, 'w') as f_dst:
            f_dst.write(src_content.replace(self.PLACEHOLDER_NAME, name))


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Testvibe control')
    subparsers = parser.add_subparsers()
    # startproject
    cmd_startproject = subparsers.add_parser('startproject',
                                             help='start a new project')
    cmd_startproject.add_argument('name')
    cmd_startproject.set_defaults(cmd='startproject')
    # run
    cmd_run = subparsers.add_parser('run', help='initiate test run')
    cmd_run.add_argument('-p', '--parallel', default=1,
                         help='number of testsuites to run in parallel')
    cmd_run.add_argument('-v', '--verbosity', action='store_true',
                        help='verbosity level')
    cmd_run.set_defaults(cmd='run')
    parser.add_argument('-V', '--version', action='version',
                        version=testvibe.VERSION,
                        help='show program\'s version number and exit')
    cmd_handler = CMDHandler(parser.parse_args())
    cmd_handler.execute()
